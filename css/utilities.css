/*utilities - "classes that will be used all around the website"
 - apparently we're not doing anything much different than a framework? 
 I guess the framework stuff like Bootstrap speeds it up?*/

 .container {
    max-width: 1100px; /*we are setting the max width and ALSO an automatic margin so it'll stay centered*/
    margin: 0 auto;
    overflow: auto;
    padding: 0 40px;
}

.card {
    background-color: #fff;
    color: #333;
    border-radius: 10px;
    box-shadow: 0 4px 10px rgba(0,0,0,0.3);
    padding: 20px;
    margin: 10px;
}

.btn {
    display: inline-block;
    padding: 10px 30px;
    cursor: pointer;
    background: var(--primary-color);
    color: #fff;
    border: none;
    border-radius: 5px;
}

.btn-outline {
    background-color: transparent;
    border: 1px solid #fff;
}

.btn:hover{
    transform: scale(0.98);
}

.text-center{
    text-align: center;
}

/*margin*/
.p-1 {
    margin: 1rem 0; /*REM is a multiplier of the root element font-size 
                    ex 1rem=16px */ 
}                   /*you can also do this with padding and x-axis*/

.p-2{
    margin: 1.5rem 0;
}

.my-3{
    margin: 2rem 0;
}
.my-4{
    margin: 3rem 0;
}

.my-5{
    margin: 4rem 0;
}

.m-1{
    margin: 1rem;
}

.m-2{

}

.m-3{
    margin: 1rem;
}

.m-4{
    
}

/*padding OK BASICALLY the idea of this is we can use these classes
for margin and padding instead of putting them on the elements
(i guess its easier to change too?*/
.py-1 {
    padding: 1rem 0; /*REM is a multiplier of the root element font-size 
                    ex 1rem=16px */ 
}                   /*you can also do this with padding and x-axis*/

.py-2{
    padding: 1.5rem 0;
}

.py-3{
    padding: 2rem 0;
}
.py-4{
    padding: 3rem 0;
}

.py-5{
    padding: 4rem 0;
}

.p1-{
    padding: 1rem 0;
}

.p-2{
    padding: 1.5rem 0;
}

.p-3{
    padding: 2rem 0;
}
.p-4{
    padding: 3rem 0;
}

.p-5{
    padding: 4rem 0;
}

.flex { /*trying out flexbox. remember it's automatically set to row
            we're also assigning this to Most of our content, while the nav bar has its own variation*/
    display: flex; 
    justify-content: center; /*aligns w main*/
    align-items: center; /*aligns cross-axis*/
    height: 100%;
}

.grid{ /*usually dont use pixels here, usually fractions or %?*/
     display: grid;
     /*alternate:grid-template-columns: 1fr 1fr;;*/
      grid-template-columns: repeat(2, 1fr);
      gap: 20px; /*grid gap*/
      justify-content: center;
      align-items: center;
      height: 100%; /*these three properties together actually "center" the items*/
}

.grid-3{
    grid-template-columns: repeat(3, 1fr)
}

.cli .grid{
    grid-template-columns: repeat(3, 1fr);
    grid-template-rows: repeat(2, 1fr);

}

/*ok so by using > *first child, it is targeting the first element inside the div w class CLI. 
even if we change it to something else, it'll always target the first item*/
.cli .grid > *:first-child { 
    grid-column: 1 / span 2;
    grid-row: 1 / span 2;
}